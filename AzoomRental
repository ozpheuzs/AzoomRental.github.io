body {
  font-family: Arial, sans-serif;
  background-color: #f1f1f4;
  margin: 0;
  padding: 0;
  color: #0e0d0d;
}

header {
  background-color: rgba(19, 195, 230, 0.978);
  color: white;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 5rem;

}

.homePage {
  background-color: #103b67;
  background-image: url('https://motionbgs.com/media/8509/silver-nissan-gt-r.3840x2160.jpg');
  color: white;
  text-align: center;
  padding: 8rem 1rem;
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;

}

.CarSearchform {
  display: flex;
  text-align: center;
  padding: 3%;
  margin-left: 500px;
  color: #13c3e6;
}

.reviews {
  margin-left: 20px;
}

.description {
  margin-left: 20px;
}

.successful-login {
  text-align: center;
  padding: 150px;

}

.login-container {
  background-color: white;
  padding: 40px;
  border-radius: 10px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 1);
  width: 100%;
  max-width: 400px;
  margin-top: 100px;
  margin-left: 37%;

}

.login-container h2 {
  text-align: center;
  margin-bottom: 20px;
  font-size: 28px;
  color: black;
}

.login-container input {
  width: 100%;
  padding: 10px;
  margin: 10px 0;
  border: 1px solid #ddd;
  border-radius: 5px;
  font-size: 16px;
}

.login-container button {
  width: 100%;
  padding: 12px;
  background-color: #4caf50;
  border: none;
  color: white;
  font-size: 18px;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.login-container button:hover {
  background-color: #4caf49;
}

.login-container p {
  text-align: center;
  margin-top: 15px;
  font-size: 14px;
  color: red;
}

.login-container p a {
  color: #4caf50;
  text-decoration: none;
}

.login-container p a:hover {
  text-decoration: underline;
}

.error {
  font-size: 14px;
  display: none;
  text-align: center;
  color: red;
}

.login-Nav {
  display: center;
  text-align: center;
}


footer {
  background-color: rgba(19, 195, 230, 0.978);
  display: end;
  align-items: flex;
}



:root {
  --brand: #13c3e6;
  --ink: #0e0d0d;
  --card: #ffffff;
  --muted: #6b7280;
  --ring: rgba(19, 195, 230, 0.35);
}

body {
  background: #f7f7fb;
}

header h1 {
  margin: 0;
}

.nav-menu a {
  margin-right: .25rem;
}

.container {
  max-width: 980px;
  margin: 2rem auto;
  padding: 0 1rem;
}

.card {
  background: var(--card);
  border-radius: 16px;
  box-shadow: 0 10px 24px rgba(0, 0, 0, 0.07);
  padding: 1.25rem;
}

h2 {
  margin: 0 0 1rem 0;
  font-size: 1.6rem;
}


.full {
  grid-column: 1 / -1;
}

label {
  display: block;
  font-weight: 600;
  margin-bottom: .35rem;
  margin-top: 1rem;
}

input,
select,
textarea {
  width: 100%;
  box-sizing: border-box;
  padding: .7rem .8rem;
  border: 1px solid #e5e7eb;
  border-radius: 10px;
  font-size: 1rem;
  outline: none;
  transition: box-shadow .15s, border-color .15s;
  background: #fff;
}

input:focus,
select:focus,
textarea:focus {
  border-color: var(--brand);
  box-shadow: 0 0 0 4px var(--ring);
}

.muted {
  color: var(--muted);
  font-size: .9rem;
}

.inline {
  display: flex;
  align-items: center;
  gap: .5rem;
}

.totals {
  background: #f9fafb;
  border: 1px dashed #e5e7eb;
  border-radius: 12px;
  padding: .9rem 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  font-weight: 700;
  margin-top: 3rem;
}

.actions {
  display: flex;
  gap: .75rem;
  margin-top: .5rem;
}

button {
  border: 0;
  border-radius: 12px;
  padding: .85rem 1rem;
  font-size: 1rem;
  cursor: pointer;
}

.primary {
  background: #10b981;
  color: #fff;
}

.secondary {
  background: #e5e7eb;
}

.section-title {
  margin: .25rem 0 .75rem 0;
  color: #111827;
}

.badge {
  display: inline-block;
  background: rgba(16, 185, 129, .12);
  color: #065f46;
  border: 1px solid rgba(16, 185, 129, .3);
  padding: .15rem .5rem;
  border-radius: 999px;
  font-size: .8rem;
  margin-left: .5rem;
}

.grid-note {
  margin: .25rem 0 1rem 0;
}

.auth-note {
  background: #fff7ed;
  border: 1px solid #fed7aa;
  color: #7c2d12;
  border-radius: 12px;
  padding: .75rem 1rem;
  margin: 1rem 0;
}

dialog {
  border: none;
  border-radius: 16px;
  padding: 0;
  width: min(560px, 92vw);
}

.modal-header {
  padding: 1rem 1.25rem;
  background: var(--brand);
  color: #fff;
  border-top-left-radius: 16px;
  border-top-right-radius: 16px;
}

.modal-body {
  padding: 1rem 1.25rem;
}

.modal-actions {
  display: flex;
  gap: .5rem;
  justify-content: flex-end;
  padding: 0 1.25rem 1rem;
}

.row {
  display: flex;
  justify-content: space-between;
  padding: 1rem 0;
  border-bottom: 1px dashed #eee;
}

.row:last-child {
  border-bottom: 0;
}

@media (max-width: 760px) {
  form {
    grid-template-columns: 1fr;
  }
}

.paymentSucessful {
  text-align: center;
  padding: 150px;

}
/* Footer layout for description + icons */
.SocialsMedia {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 16px 20px;
}

.company-description {
  margin-right: 24px;
}

.company-description h2 {
  margin: 0 0 8px 0;
}

.SocialsMedia p { margin: 0; }


/* Reservation form layout */
#reservationForm {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1rem 1.25rem;
}

#reservationForm .full {
  grid-column: 1 / -1;
}

#reservationForm .inline {
  display: grid;
  grid-template-columns: auto 1fr;
  align-items: center;
  column-gap: .5rem;
  margin-top: .35rem;
}

#reservationForm .inline label {
  margin: 0;
  font-weight: 600;
}

#reservationForm input[type="checkbox"] {
  width: 1.1rem;
  height: 1.1rem;
}
@media (max-width: 760px) {
  #reservationForm { grid-template-columns: 1fr; }
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewpoint" content="width=device-width, initial-scale=1.0">
    <title>Azoom Car Rental</title>
    <link rel="stylesheet" href="CarRental.css">
</head>

<body>
    <header>
        <h1>Azoom Car Rental</h1>
        <nav class="nav-menu" id="navMenu"><!-- Filled by JS --></nav>
    </header>
    <section class="homePage">
        <div class="homePage">

        </div>
    </section>
    <section class="CarSearchform">
        <form>
            <input type="text" id="CarName" placeholder="Enter model name or brand" size="60"
                style="height: 40px"><br></br>
        </form>
        <script src="CarRental.js"></script>
    </section>

    <section class="reviews">
        <h2>Customers reviews:</h2>
        <div class="review-card">⭐️⭐️⭐️⭐️⭐️ Great service!</div>
        <div class="review-card">⭐️⭐️⭐️⭐️ Clean car, on time.</div>
        <div class="review-card">⭐️⭐️⭐️⭐️⭐️ Affordable and easy!</div>
    </section><br></br>


    <footer>
        <div class="SocialsMedia">
            <div class="company-description">
                <h2>Company description:</h2>
                <p>AZoom car rental is a car rental company that offers wide selection of vehicles ranging from new
                    affordable models to luxurious sports car.</p>
            </div>
            <div class="company-contact">
                <h2>Contacts</h2>
                <p>For more inquiries you can contact use through the following:</p><br>
                <p>Email: AzoomRentals@gmail.com</p>
                <p>Phone: 6590 2233</p>
            </div>
            <a
                href="https://www.instagram.com/">
                <p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/a/a5/Instagram_icon.png/1200px-Instagram_icon.png?20200512141346"
                        alt="Clickable Image" width="50px" height="50px"></p>
            </a>
            <a href="https://x.com/?lang=en">
                <p><img src="https://upload.wikimedia.org/wikipedia/commons/e/e6/Twitter-new-logo.jpg"
                        alt="Clickable Image" width="50px" height="50px"></p>
            </a>
        </div>
    </footer>
</body>

</html>
// Central script for Azoom Car Rental demo
// Moves all inline page scripts into one place

(function () {
  function $(id) { return document.getElementById(id); }

  function pageName() {
    try { return (location.pathname.split('/').pop() || '').toLowerCase(); } catch { return ''; }
  }

  function getUser() {
    return localStorage.getItem('azoom_user');
  }

  function renderNav() {
    const navMenu = $('navMenu');
    if (!navMenu) return;
    const user = getUser();
    navMenu.innerHTML = '';
    const links = [
      ['CarRental.html', 'Home |'],
      ['Reserve.html', 'Reserve |'],
      ['SearchTool.html', 'Search |'],
      ['Vehicle.html', 'Vehicle |']
    ];
    links.forEach(([href, label]) => {
      const a = document.createElement('a'); a.href = href; a.textContent = label; navMenu.appendChild(a);
    });
    if (user) {
      const logout = document.createElement('a');
      logout.href = '#';
      logout.textContent = `Logout (${user})`;
      logout.addEventListener('click', (e) => {
        e.preventDefault();
        localStorage.removeItem('azoom_user');
        window.location.href = 'Login.html';
      });
      navMenu.appendChild(logout);
    } else {
      const login = document.createElement('a'); login.href = 'Login.html'; login.textContent = 'Login'; navMenu.appendChild(login);
    }
  }

  // ===== Reserve page =====
  function initReservePage() {
    renderNav();
    const authGuard = $('authGuard');
    const reserveCard = $('reserveCard');
    const loginLink = $('loginLink');
    const user = getUser();

    if (!user) {
      if (authGuard) authGuard.style.display = 'block';
      if (reserveCard) reserveCard.style.display = 'none';
      if (loginLink) {
        const next = encodeURIComponent('Reserve.html');
        loginLink.href = `Login.html?next=${next}`;
      }
      return; // Stop further init until logged in
    } else {
      if (authGuard) authGuard.style.display = 'none';
      if (reserveCard) reserveCard.style.display = 'block';
    }

    const fmt = (n) => n.toLocaleString(undefined, { style: 'currency', currency: 'USD' });
    const ratesPerDay = { economy: 38, compact: 45, suv: 72, premium: 110, sport: 240 };
    const extraRates = { gps: 5, child: 4, insurance: 18 };

    const pickupEl = $('pickupDate');
    const returnEl = $('returnDate');
    if (!pickupEl || !returnEl) return;

    const minDateTime = () => {
      const now = new Date();
      now.setMinutes(now.getMinutes() + (30 - (now.getMinutes() % 30)) % 30, 0, 0);
      return now.toISOString().slice(0, 16);
    };
    pickupEl.min = minDateTime();
    returnEl.min = minDateTime();

    function rentalDays() {
      const p = new Date(pickupEl.value);
      const r = new Date(returnEl.value);
      if (isNaN(p) || isNaN(r) || r <= p) return 0;
      return Math.ceil((r - p) / (1000 * 60 * 60 * 24));
    }
    function youngDriverSurcharge(age, base) {
      age = Number(age || 0);
      return age && age < 23 ? base * 0.15 : 0;
    }
    function calcEstimate() {
      const vehicle = $('vehicle').value;
      const days = rentalDays();
      if (!vehicle || !days) { $('estimateValue').textContent = '$0.00'; return; }
      const base = ratesPerDay[vehicle] * days;
      let extras = 0; ['gps', 'child', 'insurance'].forEach(k => { if ($(k).checked) extras += extraRates[k] * days; });
      const surcharge = youngDriverSurcharge($('age').value, base);
      const subtotal = base + extras + surcharge;
      const taxes = subtotal * 0.08;
      const total = subtotal + taxes;
      $('estimateValue').textContent = fmt(total);
      return { days, base, extras, surcharge, taxes, total };
    }

    document.querySelectorAll('input, select').forEach(el => {
      el.addEventListener('input', calcEstimate);
      el.addEventListener('change', calcEstimate);
    });
    pickupEl.addEventListener('change', () => {
      if (pickupEl.value) {
        const p = new Date(pickupEl.value);
        const minReturn = new Date(p.getTime() + 1000 * 60 * 60);
        returnEl.min = minReturn.toISOString().slice(0, 16);
        if (new Date(returnEl.value) <= p) {
          returnEl.value = minReturn.toISOString().slice(0, 16);
        }
      }
      calcEstimate();
    });
    $('resetBtn')?.addEventListener('click', () => {
      $('reservationForm').reset();
      pickupEl.min = minDateTime(); returnEl.min = minDateTime();
      $('estimateValue').textContent = '$0.00';
    });

    $('reservationForm')?.addEventListener('submit', (e) => {
      e.preventDefault();
      const est = calcEstimate();
      const requiredIds = ['pickupLocation', 'dropoffLocation', 'pickupDate', 'returnDate', 'vehicle', 'age', 'name', 'email', 'phone'];
      for (const id of requiredIds) { if (!$(id).value) { alert('Please fill ' + id + ' before submitting.'); return; } }
      if (rentalDays() === 0) { alert('Return must be after pick-up.'); return; }

      const data = {
        user: user || 'guest',
        pickupLocation: $('pickupLocation').value,
        dropoffLocation: $('dropoffLocation').value,
        pickupDate: $('pickupDate').value,
        returnDate: $('returnDate').value,
        vehicle: $('vehicle').value,
        age: $('age').value,
        extras: { gps: $('gps').checked, child: $('child').checked, insurance: $('insurance').checked },
        name: $('name').value, email: $('email').value, phone: $('phone').value,
        estimate: est
      };
      const key = 'azoom_reservations';
      const existing = JSON.parse(localStorage.getItem(key) || '[]');
      existing.push(data);
      localStorage.setItem(key, JSON.stringify(existing));

      localStorage.setItem('azoom_current_reservation', JSON.stringify(data));
      window.location.href = 'Checkout.html';
    });

    calcEstimate();
  }

  // ===== Checkout page =====
  function initCheckoutPage() {
    renderNav();

    const summaryEl = $('reservationSummary');
    const totalDueEl = $('totalDue');
    const list = JSON.parse(localStorage.getItem('azoom_reservations') || '[]');
    const current = JSON.parse(localStorage.getItem('azoom_current_reservation') || 'null') || list[list.length - 1];
    if (!current) {
      if (summaryEl) summaryEl.innerHTML = '<p class="muted">No reservation found. Redirecting...</p>';
      setTimeout(() => { window.location.href = 'Reserve.html'; }, 1200);
    } else if (summaryEl && totalDueEl) {
      const fmt = (n) => n.toLocaleString(undefined, { style: 'currency', currency: 'USD' });
      const vehicleLabelLookup = {
        economy: 'Economy â€” Toyota Vios / similar',
        compact: 'Compact â€” Honda Fit / similar',
        suv: 'SUV â€” Nissan X-Trail / similar',
        premium: 'Premium â€” BMW 5-Series / similar',
        sport: 'Sports â€” Nissan GT-R / similar'
      };
      const vehicleLabel = vehicleLabelLookup[current.vehicle] || current.vehicle;
      totalDueEl.textContent = current?.estimate ? fmt(current.estimate.total) : '$0.00';
      summaryEl.innerHTML = (
        '<div class="row"><strong>Name</strong><span>' + current.name + '</span></div>' +
        '<div class="row"><strong>Email</strong><span>' + current.email + '</span></div>' +
        '<div class="row"><strong>Phone</strong><span>' + current.phone + '</span></div>' +
        '<div class="row"><strong>Vehicle</strong><span>' + vehicleLabel + '</span></div>' +
        '<div class="row"><strong>Pick-up</strong><span>' + current.pickupLocation + ' â€” ' + new Date(current.pickupDate).toLocaleString() + '</span></div>' +
        '<div class="row"><strong>Return</strong><span>' + current.dropoffLocation + ' â€” ' + new Date(current.returnDate).toLocaleString() + '</span></div>' +
        '<div class="row"><strong>Days</strong><span>' + (current.estimate && current.estimate.days ? current.estimate.days : '-') + '</span></div>'
      );
    }

    const cardNumberEl = $('cardNumber');
    if (cardNumberEl) {
      cardNumberEl.addEventListener('input', () => {
        const digits = cardNumberEl.value.replace(/\D+/g, '').slice(0, 19);
        const parts = digits.match(/.{1,4}/g) || [];
        cardNumberEl.value = parts.join(' ');
      });
    }
    const expiryEl = $('expiry');
    if (expiryEl) {
      expiryEl.addEventListener('input', () => {
        const digits = expiryEl.value.replace(/\D+/g, '').slice(0, 4);
        if (digits.length <= 2) { expiryEl.value = digits; }
        else { expiryEl.value = digits.slice(0, 2) + '/' + digits.slice(2); }
      });
    }
    function expiryInFuture(mmYY) {
      const clean = (mmYY || '').replace(/\s+/g, '');
      const m = clean.slice(0, 2);
      const y = clean.slice(-2);
      const month = parseInt(m, 10);
      const year = 2000 + parseInt(y, 10);
      if (!month || month < 1 || month > 12 || isNaN(year)) return false;
      const monthIndex = month - 1;
      const lastDay = new Date(year, monthIndex + 1, 0, 23, 59, 59);
      return lastDay >= new Date();
    }

    const form = $('paymentForm');
    if (form) {
      form.addEventListener('submit', (e) => {
        e.preventDefault();
        const cardName = $('cardName');
        const cardNumber = $('cardNumber');
        const expiry = $('expiry');
        const cvv = $('cvv');
        if (!cardName.value.trim() || !cardNumber.checkValidity() || !expiry.checkValidity() || !cvv.checkValidity() || !expiryInFuture(expiry.value)) {
          alert('Please enter valid card details.');
          return;
        }
        const paymentInfo = {
          name: cardName.value.trim(),
          number: cardNumber.value.replace(/\s+/g, ''),
          expiry: expiry.value,
          cvv: cvv.value
        };
        localStorage.setItem('azoom_payment_info', JSON.stringify(paymentInfo));
        window.location.href = 'Payment.html';
      });
    }
  }

  // ===== Login page =====
  function initLoginPage() {
    const form = $('loginForm');
    if (!form) return;
    form.addEventListener('submit', (event) => {
      event.preventDefault();
      const username = $('username').value;
      const password = $('password').value;
      const web_usr_name = 'John';
      const web_pw = '123456';
      if (username == web_usr_name || password == web_pw) { // keep original behavior
        localStorage.setItem('azoom_user', username);
        window.location.href = 'Successful.html';
      } else {
        const err = $('error-message');
        if (err) { err.style.display = 'block'; err.style.color = 'red'; }
      }
    });
  }

  function initSimplePages() {
    renderNav();
  }
  // ===== Vehicle data (shared) =====
  function getVehicles() {
    return [
      { name: 'Nissan X-Trail', brand: 'Nissan', category: 'SUV', seats: 5, image: 'img/xtrail.jpg' },
      { name: 'BMW 5-Series', brand: 'BMW', category: 'Premium', seats: 5, image: 'img/bmw5.jpg' },
      { name: 'Honda Fit', brand: 'Honda', category: 'Compact', seats: 5, image: 'img/hondafit.jpg' },
      { name: 'Toyota Vios', brand: 'Toyota', category: 'Economy', seats: 5, image: 'img/toyotavios.png' },
      { name: 'Nissan GT-R R34', brand: 'Nissan', category: 'Sports', seats: 4, image: 'img/gtr-r34.jpg' }
    ];
  }

  function renderVehicleCards(list, containerId = 'vehicleResults') {
    const el = document.getElementById(containerId);
    if (!el) return;
    if (!list || list.length === 0) {
      el.innerHTML = '<p class="muted">No vehicles match your search.</p>';
      return;
    }
    el.innerHTML = '';
    list.forEach(v => {
      const article = document.createElement('article');
      article.className = 'vehicle-card';
      article.innerHTML = `
        <img src="${v.image}" alt="${v.name}" />
        <div class="content">
          <h3>${v.name}</h3>
          <p>Category: ${v.category} | Seats ${v.seats} | Auto</p>
          <div class="actions"><a href="Reserve.html">Reserve</a></div>
        </div>`;
      el.appendChild(article);
    });
  }

  // ===== Search Tool page =====
  function initSearchToolPage() {
    renderNav();
    const input = document.getElementById('searchInput');
    const all = getVehicles();
    function doFilter() {
      const q = (input?.value || '').trim().toLowerCase();
      const filtered = q ? all.filter(v => (v.name + ' ' + v.brand).toLowerCase().includes(q)) : all;
      renderVehicleCards(filtered, 'vehicleResults');
    }
    if (input) {
      input.addEventListener('input', doFilter);
    }
    doFilter();
  }
document.addEventListener('DOMContentLoaded', () => {
    switch (pageName()) {
      case 'reserve.html':
        initReservePage();
        break;
      case 'checkout.html':
        initCheckoutPage();
        break;
      case 'login.html':
        initLoginPage();
        break;
      case 'carrental.html':
      case 'payment.html':
        initSimplePages();
        break;
      case 'searchtool.html':
        initSearchToolPage();
        break;
      default:
        // Still render nav if present
        renderNav();
        break;
    }
  });
})();





<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Azoom Car Rental — Checkout</title>
  <link rel="stylesheet" href="CarRental.css" />
</head>
<body>
  <header>
    <h1>Azoom Car Rental</h1>
    <nav class="nav-menu" id="navMenu"><!-- Filled by JS --></nav>
  </header>

  <div class="container">
    <div class="card">
      <h2>Checkout</h2>
      <p class="muted">Review your reservation and enter payment details.</p>

      <div id="reservationSummary" class="full" style="margin-top:1rem;"></div>

      <form id="paymentForm" novalidate>
        <label for="cardName">Name on card</label>
        <input id="cardName" name="cardName" placeholder="Exact name on card" required />

        <label for="cardNumber">Card number</label>
        <input id="cardNumber" name="cardNumber" inputmode="numeric" autocomplete="cc-number" placeholder="1234 5678 9012 3456" pattern="^[0-9 ]{15,19}$" required />

        <div class="inline" style="gap:1rem;">
          <div style="flex:1;">
            <label for="expiry">Expiry (MM/YY)</label>
            <input id="expiry" name="expiry" inputmode="numeric" placeholder="MM/YY" pattern="^(0[1-9]|1[0-2])\/?[0-9]{2}$" required />
          </div>
          <div style="flex:1;">
            <label for="cvv">CVV</label>
            <input id="cvv" name="cvv" inputmode="numeric" placeholder="3 or 4 digits" pattern="^[0-9]{3,4}$" required />
          </div>
        </div>

        <label for="billing">Billing address (optional)</label>
        <textarea id="billing" name="billing" rows="3" placeholder="Street, City, Postcode"></textarea>

        <div class="totals">
          <span>Total due</span>
          <span id="totalDue">$0.00</span>
        </div>
        <div class="actions">
          <a href="Reserve.html" class="secondary" style="text-decoration:none; text-align:center;">Back</a>
          <button type="submit" class="primary">Pay now</button>
        </div>
      </form>
    </div>
  </div>

  <script src="CarRental.js"></script>
</body>
</html>


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Azoom Login</title>
    <link rel="stylesheet" href="CarRental.css">
</head>

<body>
    <header>
        <h1>Azoom Car Rental</h1>
    </header>
    <div class="login-container">
        <h2>Login</h2>
        <form id="loginForm">
            <p class="error" id="error-message">Invalid username or password</p>
            <label for="username">Username:</label>
            <input type="text" id="username" name="username" required><br></br>
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required><br></br>

            <button type="submit">Login</button><br></br>
            <a href="#">Sign up |</a>
            <a href="#">forget password</a>
            
        </form>
    </div>
    <script src="CarRental.js"></script>
    <footer>
        
    </footer>

</body>

</html>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Payment Screen</title>
    <link rel="stylesheet" href="CarRental.css">
</head>

<body>
    <header>
        <h1>Azoom Car Rental</h1>
        <nav class="nav-menu" id="navMenu">
            <!-- Filled by JS based on auth -->
        </nav>
    </header>
    <section class="paymentSucessful">
        <h3>Payment is successful</h3>
        <h3>Have a wonderful day!!</h3>
            <h3>Redirecting to home page please wait......</h3>
        <meta http-equiv="refresh" content="5; carRental.html">
    <div id="countdown">
        <span id="seconds"></span><s></s>
    </div>

    </section>
    <script src="CarRental.js"></script>
</body>

</html>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Azoom Car Rental — Reserve</title>
    <link rel="stylesheet" href="CarRental.css" />
    <style>
    </style>
</head>

<body>
    <header>
        <h1>Azoom Car Rental</h1>
        <nav class="nav-menu" id="navMenu">
            <!-- Filled by JS based on auth -->
        </nav>
    </header>

    <div class="container">
        <div id="authGuard" class="auth-note" style="display:none;">
            You must be logged in to make a reservation. <a href="Login.html" id="loginLink">Go to login</a>.
        </div>

        <div class="card" id="reserveCard" style="display:none;">
            <h2 class="section-title">Make a Reservation <span class="badge">Instant estimate</span></h2>
            <p class="muted grid-note">Fill in the details below. Your price will update automatically before you
                confirm.</p>
            <form id="reservationForm" novalidate>
                <div>
                    <label for="pickupLocation">Pick-up location</label>
                    <input id="pickupLocation" name="pickupLocation" placeholder="e.g., Changi Airport T3" required />
                </div>

                <div>
                    <label for="dropoffLocation">Return location</label>
                    <input id="dropoffLocation" name="dropoffLocation" placeholder="e.g., Azoom Downtown" required />
                </div>

                <div>
                    <label for="pickupDate">Pick-up date & time</label>
                    <input id="pickupDate" name="pickupDate" type="datetime-local" required />
                </div>

                <div>
                    <label for="returnDate">Return date & time</label>
                    <input id="returnDate" name="returnDate" type="datetime-local" required />
                </div>

                <div>
                    <label for="vehicle">Vehicle</label>
                    <select id="vehicle" name="vehicle" required>
                        <option value="" disabled selected>Select a vehicle</option>
                        <option value="economy">Economy — Toyota Vios / similar</option>
                        <option value="compact">Compact — Honda Fit / similar</option>
                        <option value="suv">SUV — Nissan X‑Trail / similar</option>
                        <option value="premium">Premium — BMW 5‑Series / similar</option>
                        <option value="sport">Sports — Nissan GT‑R / similar</option>
                    </select>
                </div>

                <div>
                    <label for="age">Driver’s age</label>
                    <input id="age" name="age" type="number" min="18" max="80" placeholder="e.g., 23" required />
                </div>

                <div class="full">
                    <label>Extras (optional)</label>
                    <div class="inline"><input type="checkbox" id="gps" /><label for="gps">GPS ($5/day)</label></div>
                    <div class="inline"><input type="checkbox" id="child" /><label for="child">Child seat
                            ($4/day)</label></div>
                    <div class="inline"><input type="checkbox" id="insurance" /><label for="insurance">Full insurance
                            ($18/day)</label></div>
                </div>

                <div>
                    <label for="name">Full name</label>
                    <input id="name" name="name" placeholder="Your name on licence" required />
                </div>

                <div>
                    <label for="email">Email</label>
                    <input id="email" name="email" type="email" placeholder="you@example.com" required />
                </div>

                <div>
                    <label for="phone">Phone</label>
                    <input id="phone" name="phone" type="tel" placeholder="+65 8XXXXXXX" required />
                </div>

                <div class="full">
                    <div class="totals">
                        <span id="estimateLabel">Estimated total</span>
                        <span id="estimateValue">$0.00</span>
                    </div>
                    <div class="actions">
                        <button type="button" class="secondary" id="resetBtn">Reset</button>
                        <button type="submit" class="primary">Reserve now</button>
                    </div>
                    <p class="muted">By reserving, you agree to our rental terms. Payment is collected when you pick up
                        the vehicle.</p>
                </div>
            </form>
        </div>
    </div>

    <dialog id="confirmDialog">
        <div class="modal-header">
            <h3 style="margin:0;">Reservation Confirmed</h3>
        </div>
        <div class="modal-body" id="summaryBody"></div>
        <div class="modal-actions">
            <form method="dialog">
                <button class="secondary">Close</button>
            </form>
        </div>
    </dialog>

    <script src="CarRental.js"></script>
</body>

</html>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Search Vehicles</title>
    <link rel="stylesheet" href="CarRental.css" />
    <style>
      .search-wrap { max-width: 980px; margin: 2rem auto; padding: 0 1rem; }
      #searchInput { width: 100%; padding: .9rem 1rem; border-radius: 12px; border: 1px solid #e5e7eb; font-size: 1rem; outline: none; box-shadow: 0 0 0 0 rgba(0,0,0,0); }
      #searchInput:focus { border-color: #13c3e6; box-shadow: 0 0 0 4px rgba(19,195,230,.35); }
      .vehicle-gallery { display: grid; grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); gap: 18px; margin-top: 1.25rem; }
      .vehicle-card { background: #fff; border-radius: 14px; box-shadow: 0 10px 24px rgba(0,0,0,.07); overflow: hidden; display: flex; flex-direction: column; }
      .vehicle-card img { width: 100%; height: 180px; object-fit: cover; background:#f7f7fb; }
      .vehicle-card .content { padding: 0.9rem 1rem 1.1rem; display: flex; flex-direction: column; gap: 6px; }
      .vehicle-card h3 { margin: 0; font-size: 1.1rem; }
      .vehicle-card p { margin: 0; color: #6b7280; font-size: .95rem; }
      .vehicle-card .actions { margin-top: .5rem; }
      .vehicle-card .actions a { text-decoration: none; background: #10b981; color: #fff; padding: .6rem .8rem; border-radius: 10px; display: inline-block; }
    </style>
  </head>
  <body>
    <header>
      <h1>Azoom Car Rental</h1>
      <nav class="nav-menu" id="navMenu"></nav>
    </header>

    <main class="search-wrap">
      <h2>Search Vehicles</h2>
      <input id="searchInput" type="text" placeholder="Enter model name or brand" />
      <div id="vehicleResults" class="vehicle-gallery"></div>
    </main>

    <script src="CarRental.js"></script>
  </body>
  </html>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Success</title>
    <link rel="stylesheet" href="CarRental.css">
</head>
<body>
    <header>
        <h1>Azoom Car Rental</h1>
    </header>
    <section class="successful-login">
    <h1>Login Successful Welcome!</h1>
    <h3>Redirecting to home page please wait......</h3>
        <meta http-equiv="refresh" content="5; carRental.html">
    <div id="countdown">
        <span id="seconds"></span><s></s>
    </div>
    </section>
    <footer>

    </footer>
</body>
</html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Azoom Vehicles</title>
    <link rel="stylesheet" href="CarRental.css" />
    <style>
      .vehicle-gallery { display: grid; grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); gap: 18px; }
      .vehicle-card { background: #fff; border-radius: 14px; box-shadow: 0 10px 24px rgba(0,0,0,.07); overflow: hidden; display: flex; flex-direction: column; }
      .vehicle-card img { width: 100%; height: 180px; object-fit: cover; background:#f7f7fb; }
      .vehicle-card .content { padding: 0.9rem 1rem 1.1rem; display: flex; flex-direction: column; gap: 6px; }
      .vehicle-card h3 { margin: 0; font-size: 1.1rem; }
      .vehicle-card p { margin: 0; color: #6b7280; font-size: .95rem; }
      .vehicle-card .actions { margin-top: .5rem; }
      .vehicle-card .actions a { text-decoration: none; background: #10b981; color: #fff; padding: .6rem .8rem; border-radius: 10px; display: inline-block; }
    </style>
</head>
<body>
  <header>
    <h1>Azoom Car Rental</h1>
    <nav class="nav-menu" id="navMenu"></nav>
  </header>

  <main class="container">
    <h2>Available Vehicles</h2>
    <div class="vehicle-gallery">
      <!-- Nissan X-Trail (SUV) -->
      <article class="vehicle-card">
        <img src="img/xtrail.jpg" alt="Nissan X-Trail SUV" />
        <div class="content">
          <h3>Nissan X‑Trail</h3>
          <p>Category: SUV | Seats 5 | Auto</p>
          <div class="actions"><a href="Reserve.html">Reserve</a></div>
        </div>
      </article>

      <!-- BMW 5 Series (Premium) -->
      <article class="vehicle-card">
        <img src="img/bmw5.jpg" alt="BMW 5 Series sedan" />
        <div class="content">
          <h3>BMW 5‑Series</h3>
          <p>Category: Premium | Seats 5 | Auto</p>
          <div class="actions"><a href="Reserve.html">Reserve</a></div>
        </div>
      </article>

      <!-- Honda Fit (Compact) -->
      <article class="vehicle-card">
        <img src="img/hondafit.jpg" alt="Honda Fit hatchback" />
        <div class="content">
          <h3>Honda Fit</h3>
          <p>Category: Compact | Seats 5 | Auto</p>
          <div class="actions"><a href="Reserve.html">Reserve</a></div>
        </div>
      </article>

      <!-- Toyota Vios (Economy) -->
      <article class="vehicle-card">
        <img src="img/toyotavios.png" alt="Toyota Vios sedan" />
        <div class="content">
          <h3>Toyota Vios</h3>
          <p>Category: Economy | Seats 5 | Auto</p>
          <div class="actions"><a href="Reserve.html">Reserve</a></div>
        </div>
      </article>

      <!-- Nissan GT‑R R34 (Sports) -->
      <article class="vehicle-card">
        <img src="img/gtr-r34.jpg" alt="Nissan GT-R R34 sports coupe" />
        <div class="content">
          <h3>Nissan GT‑R R34</h3>
          <p>Category: Sports | Seats 4 | Auto</p>
          <div class="actions"><a href="Reserve.html">Reserve</a></div>
        </div>
      </article>
    </div>
  </main>

  <script src="CarRental.js"></script>
</body>
</html>













